#################################################################################################
#
# Copyright 2018 Ericsson AB.
# For a full list of individual contributors, please see the commit history.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
##################################################################################################
# Eiffel Sandbox 
#
# run:         docker-compose up         
# stop:        docker-compose stop
# stop/remove: docker-compose down --volumes
#
# Cleanup/Remove (if needed):
#     Dangling Volumes:   docker volume rm `docker volume ls -q -f dangling=true`            
#     Unused Images:      docker images -q | xargs docker rmi
#     Stopped containers: docker rm `docker ps -a -q` 
#
# Maintainer: michael.frick@ericsson.com
##################################################################################################
version: "2.1"
services:
  mymongodb-mongodb:
    restart: always
    image: mongo:${MONGODB_VERSION}
    expose:
      - "27017"
    ports:
      - "27017:27017"
    healthcheck: 
        test: ["CMD-SHELL","echo", "'db.stats().ok' | mongo localhost:27017/test", "--quiet"]
        interval: 30s
        timeout: 10s
        retries: 5        
    networks:
          eiffel_2.0_1:
            aliases:
              - mymongodb-mongodb:27017
  mongo-seed:
    image: mongo:${MONGODB_VERSION}
    links:
      - mymongodb-mongodb
    volumes:
      - ./seed-data:/seed-data
      - ./seed-data/ei_artifact:/seed-data/ei_artifact
      - ./seed-data/ei_sourcechange:/seed-data/ei_sourcechange
      - ./seed-data/ei_testexecution:/seed-data/ei_testexecution
      - ./seed-data/ei_allevents:/seed-data/ei_allevents
    command:   #  Do NOT SEED ER without user & psw specified in application.yml, DB and tables will be created with generated PSW if not specified. json filename = collection
      bash -c "mongoimport --host mymongodb-mongodb:27017 --db eiffel_intelligence-artifact --type json --file /seed-data/sessions.json --jsonArray &&
               mongoimport --host mymongodb-mongodb:27017 --db eiffel_intelligence-artifact --type json --file /seed-data/aggregated_objects.json --jsonArray &&
               mongoimport --host mymongodb-mongodb:27017 --db eiffel_intelligence-artifact --type json --file /seed-data/event_object_map.json --jsonArray &&
               mongoimport --host mymongodb-mongodb:27017 --db eiffel_intelligence-artifact --type json --file /seed-data/wait_list.json --jsonArray &&
               mongoimport --host mymongodb-mongodb:27017 --db eiffel_intelligence-artifact --type json --file /seed-data/ei_artifact/subscription.json --jsonArray &&
               mongoimport --host mymongodb-mongodb:27017 --db eiffel_intelligence-artifact --type json --file /seed-data/subscription_repeat_handler.json --jsonArray &&
               mongoimport --host mymongodb-mongodb:27017 --db MissedNotification-artifact --type json --file /seed-data/Notification.json --jsonArray &&
               mongoimport --host mymongodb-mongodb:27017 --db eiffel_intelligence-sourcechange --type json --file /seed-data/sessions.json --jsonArray &&
               mongoimport --host mymongodb-mongodb:27017 --db eiffel_intelligence-sourcechange --type json --file /seed-data/aggregated_objects.json --jsonArray &&
               mongoimport --host mymongodb-mongodb:27017 --db eiffel_intelligence-sourcechange --type json --file /seed-data/event_object_map.json --jsonArray &&
               mongoimport --host mymongodb-mongodb:27017 --db eiffel_intelligence-sourcechange --type json --file /seed-data/wait_list.json --jsonArray &&
               mongoimport --host mymongodb-mongodb:27017 --db eiffel_intelligence-sourcechange --type json --file /seed-data/ei_sourcechange/subscription.json --jsonArray &&
               mongoimport --host mymongodb-mongodb:27017 --db eiffel_intelligence-sourcechange --type json --file /seed-data/subscription_repeat_handler.json --jsonArray &&
               mongoimport --host mymongodb-mongodb:27017 --db MissedNotification-sourcechange --type json --file /seed-data/Notification.json --jsonArray &&
               mongoimport --host mymongodb-mongodb:27017 --db eiffel_intelligence-testexecution --type json --file /seed-data/sessions.json --jsonArray &&
               mongoimport --host mymongodb-mongodb:27017 --db eiffel_intelligence-testexecution --type json --file /seed-data/aggregated_objects.json --jsonArray &&
               mongoimport --host mymongodb-mongodb:27017 --db eiffel_intelligence-testexecution --type json --file /seed-data/event_object_map.json --jsonArray &&
               mongoimport --host mymongodb-mongodb:27017 --db eiffel_intelligence-testexecution --type json --file /seed-data/wait_list.json --jsonArray &&
               mongoimport --host mymongodb-mongodb:27017 --db eiffel_intelligence-testexecution --type json --file /seed-data/ei_testexecution/subscription.json --jsonArray &&
               mongoimport --host mymongodb-mongodb:27017 --db eiffel_intelligence-testexecution --type json --file /seed-data/subscription_repeat_handler.json --jsonArray &&
               mongoimport --host mymongodb-mongodb:27017 --db MissedNotification-testexecution --type json --file /seed-data/Notification.json --jsonArray &&
               mongoimport --host mymongodb-mongodb:27017 --db eiffel_intelligence-allevents --type json --file /seed-data/sessions.json --jsonArray &&
               mongoimport --host mymongodb-mongodb:27017 --db eiffel_intelligence-allevents --type json --file /seed-data/aggregated_objects.json --jsonArray &&
               mongoimport --host mymongodb-mongodb:27017 --db eiffel_intelligence-allevents --type json --file /seed-data/event_object_map.json --jsonArray &&
               mongoimport --host mymongodb-mongodb:27017 --db eiffel_intelligence-allevents --type json --file /seed-data/wait_list.json --jsonArray &&
               mongoimport --host mymongodb-mongodb:27017 --db eiffel_intelligence-allevents --type json --file /seed-data/ei_allevents/subscription.json --jsonArray &&
               mongoimport --host mymongodb-mongodb:27017 --db eiffel_intelligence-allevents --type json --file /seed-data/subscription_repeat_handler.json --jsonArray &&
               mongoimport --host mymongodb-mongodb:27017 --db eiffel_intelligence-allevents --type json --file /seed-data/subscription_repeat_handler.json --jsonArray &&
               mongoimport --host mymongodb-mongodb:27017 --db MissedNotification-allevents --type json --file /seed-data/Notification.json --jsonArray &&
               mongoimport --host mymongodb-mongodb:27017 --db eiffel --type json --file /seed-data/events.json --jsonArray &&
               mongo eiffel --host mymongodb-mongodb:27017  --eval \"db.events.remove({})\" &&                          
               mongo MissedNotification-artifact --host mymongodb-mongodb:27017  --eval \"db.Notification.remove({})\" &&
               mongo MissedNotification-sourcechange --host mymongodb-mongodb:27017  --eval \"db.Notification.remove({})\" &&
               mongo MissedNotification-testexecution --host mymongodb-mongodb:27017  --eval \"db.Notification.remove({})\" &&
               mongo eiffel_intelligence-artifact --host mymongodb-mongodb:27017  --eval \"db.sessions.remove({})\" &&               
               mongo eiffel_intelligence-artifact --host mymongodb-mongodb:27017  --eval \"db.aggregated_objects.remove({})\" &&
               mongo eiffel_intelligence-artifact --host mymongodb-mongodb:27017  --eval \"db.event_object_map.remove({})\" &&
               mongo eiffel_intelligence-artifact --host mymongodb-mongodb:27017  --eval \"db.wait_list.remove({})\" && 
               mongo eiffel_intelligence-artifact --host mymongodb-mongodb:27017  --eval \"db.subscription_repeat_handler.remove({})\" &&     
               mongo eiffel_intelligence-sourcechange --host mymongodb-mongodb:27017  --eval \"db.sessions.remove({})\" &&               
               mongo eiffel_intelligence-sourcechange --host mymongodb-mongodb:27017  --eval \"db.aggregated_objects.remove({})\" &&
               mongo eiffel_intelligence-sourcechange --host mymongodb-mongodb:27017  --eval \"db.event_object_map.remove({})\" &&
               mongo eiffel_intelligence-sourcechange --host mymongodb-mongodb:27017  --eval \"db.wait_list.remove({})\" &&  
               mongo eiffel_intelligence-sourcechange --host mymongodb-mongodb:27017  --eval \"db.subscription_repeat_handler.remove({})\" &&
               mongo eiffel_intelligence-testexecution --host mymongodb-mongodb:27017  --eval \"db.sessions.remove({})\" &&               
               mongo eiffel_intelligence-testexecution --host mymongodb-mongodb:27017  --eval \"db.aggregated_objects.remove({})\" &&
               mongo eiffel_intelligence-testexecution --host mymongodb-mongodb:27017  --eval \"db.event_object_map.remove({})\" &&
               mongo eiffel_intelligence-testexecution --host mymongodb-mongodb:27017  --eval \"db.wait_list.remove({})\" &&   
               mongo eiffel_intelligence-testexecution --host mymongodb-mongodb:27017  --eval \"db.subscription_repeat_handler.remove({})\" && 
               mongo eiffel_intelligence-allevents --host mymongodb-mongodb:27017  --eval \"db.sessions.remove({})\" &&
               mongo eiffel_intelligence-allevents --host mymongodb-mongodb:27017  --eval \"db.aggregated_objects.remove({})\" &&
               mongo eiffel_intelligence-allevents --host mymongodb-mongodb:27017  --eval \"db.event_object_map.remove({})\" &&
               mongo eiffel_intelligence-allevents --host mymongodb-mongodb:27017  --eval \"db.wait_list.remove({})\" &&
               mongo eiffel_intelligence-allevents --host mymongodb-mongodb:27017  --eval \"db.subscription_repeat_handler.remove({})\"               
               "    
    networks:
          eiffel_2.0_1:
            aliases:
              - mongo-seed

              
  myrabbitmq-rabbitmq:
    restart: always
    image: rabbitmq:${RABBITMQ_VERSION}
    expose:
      - "15672"
      - "5672"    
    ports:
      - "15672:15672"
      - "5672:5672"
    healthcheck:
        test: ["CMD-SHELL", "if rabbitmqctl status; then \nexit 0 \nfi \nexit 1"]
        interval: 30s
        timeout: 10s
        retries: 5  
    networks:
          eiffel_2.0_1:
            aliases:
              - myrabbitmq-rabbitmq:5672
              - myrabbitmq-rabbitmq:15672
    environment:
      - RABBITMQ_DEFAULT_PASS=myuser
      - RABBITMQ_DEFAULT_USER=myuser
      - RABBITMQ_DEFAULT_VHOST=/
 
 
  ####### /Start Eiffel Intelligence Artifact ###############################################################################
  eiffel-intelligence-artifact:
    restart: always
    image: eiffelericsson/eiffel-intelligence-backend:${EI_BACKEND_VERSION}
    expose:
      - "8090"        
    ports:
      - "8070:8090"
    depends_on:
      mymongodb-mongodb:
          condition: service_healthy
      myrabbitmq-rabbitmq:
          condition: service_healthy
    networks:
          eiffel_2.0_1:
            aliases:
              - eiffel-intelligence-artifact:8090
    environment:       # Overrides settings in application config file
      - SpringApplicationName=eiffel-intelligence-artifact
      - server.port=8090
      - rules.path=/ArtifactRules_new.json
      - rabbitmq.host=myrabbitmq-rabbitmq
      - rabbitmq.port=5672
      - rabbitmq.domainId=eiffel-sandbox
      - rabbitmq.componentName=eiffelintelligence-artifact
      - rabbitmq.waitlist.queue.suffix=waitlist-artifact    
      - rabbitmq.user=myuser
      - rabbitmq.password=myuser
      - spring.data.mongodb.host=mymongodb-mongodb
      - spring.data.mongodb.port=27017
      - spring.data.mongodb.database=eiffel_intelligence-artifact
      - missedNotificationDataBaseName=MissedNotification-artifact
      - search.query.prefix=object
      - aggregated.object.name=aggregatedObject
      - spring.mail.host=
      - spring.mail.port=
      - spring.mail.username=      
      - spring.mail.password=
      - spring.mail.properties.mail.smtp.auth=false
      - spring.mail.properties.mail.smtp.starttls.enable=false   
      - er.url=http://eiffel-er:8080/search/
      - WAIT_MB_HOSTS=myrabbitmq-rabbitmq:15672
      - WAIT_DB_HOSTS=mymongodb-mongodb:27017
#      - EI_CMD_ARGS=DEBUG    
      
####### /Stop Eiffel Intelligence Artifact ###############################################################################


####### /Start Eiffel Intelligence Source Change ###############################################################################
  eiffel-intelligence-sourcechange:
    restart: always
    image: eiffelericsson/eiffel-intelligence-backend:${EI_BACKEND_VERSION}
    expose:
      - "8090"        
    ports:
      - "8072:8090"
    depends_on:
      mymongodb-mongodb:
          condition: service_healthy
      myrabbitmq-rabbitmq:
          condition: service_healthy
    networks:
          eiffel_2.0_1:
            aliases:
              - eiffel-intelligence-sourcechange:8090
    environment:       # Overrides settings in application config file
      - SpringApplicationName=eiffel-intelligence-sourcechange
      - server.port=8090
      - rules.path=/TestSourceChangeObjectRules.json
      - rabbitmq.host=myrabbitmq-rabbitmq
      - rabbitmq.port=5672
      - rabbitmq.domainId=eiffel-sandbox
      - rabbitmq.componentName=eiffelintelligence-sourcechange
      - rabbitmq.waitlist.queue.suffix=waitlist-sourcechange
      - rabbitmq.user=myuser
      - rabbitmq.password=myuser
      - spring.data.mongodb.host=mymongodb-mongodb
      - spring.data.mongodb.port=27017
      - spring.data.mongodb.database=eiffel_intelligence-sourcechange
      - missedNotificationDataBaseName=MissedNotification-sourcechange
      - search.query.prefix=object
      - aggregated.object.name=aggregatedObject
      - spring.mail.host=
      - spring.mail.port=
      - spring.mail.username=      
      - spring.mail.password=
      - pring.mail.properties.mail.smtp.auth=false
      - spring.mail.properties.mail.smtp.starttls.enable=false  
      - er.url=http://eiffel-er:8080/search/
      - WAIT_MB_HOSTS=myrabbitmq-rabbitmq:15672
      - WAIT_DB_HOSTS=mymongodb-mongodb:27017
#      - EI_CMD_ARGS=DEBUG 
      
####### /Stop Eiffel Intelligence Source Change ###############################################################################


####### /Start Eiffel Intelligence Test Execution ###############################################################################
  eiffel-intelligence-testexecution:
    restart: always
    image: eiffelericsson/eiffel-intelligence-backend:${EI_BACKEND_VERSION}
    expose:
      - "8090"        
    ports:
      - "8074:8090"
    depends_on:
      mymongodb-mongodb:
          condition: service_healthy
      myrabbitmq-rabbitmq:
          condition: service_healthy
    networks:
          eiffel_2.0_1:
            aliases:
              - eiffel-intelligence-testexecution:8090
    environment:       # Overrides settings in application config file
      - SpringApplicationName=eiffel-intelligence-testexecution
      - server.port=8090
      - rules.path=/TestExecutionObjectRules.json
      - rabbitmq.host=myrabbitmq-rabbitmq
      - rabbitmq.port=5672
      - rabbitmq.domainId=eiffel-sandbox
      - rabbitmq.componentName=eiffelintelligence-testexecution
      - rabbitmq.waitlist.queue.suffix=waitlist-testexecution
      - rabbitmq.user=myuser
      - rabbitmq.password=myuser
      - spring.data.mongodb.host=mymongodb-mongodb
      - spring.data.mongodb.port=27017
      - spring.data.mongodb.database=eiffel_intelligence-testexecution
      - missedNotificationDataBaseName=MissedNotification-testexecution
      - search.query.prefix=object
      - aggregated.object.name=aggregatedObject  
      - spring.mail.host=
      - spring.mail.port=
      - spring.mail.username=      
      - spring.mail.password=
      - pring.mail.properties.mail.smtp.auth=false
      - spring.mail.properties.mail.smtp.starttls.enable=false  
      - er.url=http://eiffel-er:8080/search/
      - WAIT_MB_HOSTS=myrabbitmq-rabbitmq:15672
      - WAIT_DB_HOSTS=mymongodb-mongodb:27017
#      - EI_CMD_ARGS=DEBUG   
      
####### /Stop Eiffel Intelligence Test Execution ###############################################################################

####### /Start Eiffel Intelligence All Events ###############################################################################
  eiffel-intelligence-allevents:
    restart: always
    image: eiffelericsson/eiffel-intelligence-backend:${EI_BACKEND_VERSION}
    expose:
      - "8090"
    ports:
      - "8076:8090"
    depends_on:
      mymongodb-mongodb:
          condition: service_healthy
      myrabbitmq-rabbitmq:
          condition: service_healthy
    networks:
          eiffel_2.0_1:
            aliases:
              - eiffel-intelligence-allevents:8090
    environment:       # Overrides settings in application config file
      - SpringApplicationName=eiffel-intelligence-allevents
      - server.port=8090
      - rules.path=/all_event_rules.json
      - rabbitmq.domainId=eiffel-sandbox
      - rabbitmq.componentName=eiffelintelligence-allevents
      - rabbitmq.waitlist.queue.suffix=waitlist-allevents
      - rabbitmq.host=myrabbitmq-rabbitmq
      - rabbitmq.port=5672
      - rabbitmq.user=myuser
      - rabbitmq.password=myuser
      - spring.data.mongodb.host=mymongodb-mongodb
      - spring.data.mongodb.port=27017
      - spring.data.mongodb.database=eiffel_intelligence-allevents
      - missedNotificationDataBaseName=MissedNotification-allevents
      - search.query.prefix=object
      - aggregated.object.name=aggregatedObject
      - spring.mail.host=mail.lmera.ericsson.se
      - spring.mail.port=25
      - spring.mail.username=
      - spring.mail.password=
      - spring.mail.properties.mail.smtp.auth=false
      - spring.mail.properties.mail.smtp.starttls.enable=false
      - er.url=http://eiffel-er:8080/search/
      - WAIT_MB_HOSTS=myrabbitmq-rabbitmq:15672
      - WAIT_DB_HOSTS=mymongodb-mongodb:27017
#      - EI_CMD_ARGS=DEBUG

####### /Stop Eiffel Intelligence All Events ############################################################################### 

####### /Start Eiffel Intelligence Frontened ############################################################################### 


  ei-frontend:
    restart: always
    image: eiffelericsson/eiffel-intelligence-frontend:${EI_FRONTEND_VERSION}
    expose:
      - "8080"
    ports:
      - "8077:8080"
    depends_on:
      - eiffel-intelligence-allevents
      - eiffel-intelligence-testexecution
      - eiffel-intelligence-sourcechange
      - eiffel-intelligence-artifact
    networks:
          eiffel_2.0_1:
            aliases:
              - ei-frontend:8080
    environment:      # Overrides settings in application config file
      - spring.application.name=eiffel-intelligence-frontend
      - server.port=8080
      - ei.frontendServiceHost=${HOST}
      - ei.frontendServicePort=8077
      - ei.backendInstancesFilePath=/tmp/eiInstancesListFile.json 
      - ei.backendInstancesListJsonContent=${EI_FRONTEND_EI_INSTANCES_LIST}
#      - EI_CMD_ARGS=DEBUG

####### /Stop Eiffel Intelligence Frontend ###############################################################################  


  eiffel-vici:
    restart: always
    image: eiffelericsson/eiffel-vici:${EIFFEL_VICI_VERSION}
    expose:
      - "8080"    
    ports:
      - "8092:8080"
    networks:
          eiffel_2.0_1:
            aliases:
              - eiffel-vici:8080
  dummy-er:
    restart: always
    image: eiffelericsson/dummy-er:${DUMMY_ER_VERSION}
    expose:
      - "8081"        
    ports:
      - "8093:8081"
    depends_on:
      - eiffel-er
      - eiffel-vici
    networks:
          eiffel_2.0_1:
            aliases:
              - dummy-er:8081
    environment:       # Overrides settings in application config file
      - mongodb=true
      - mongodb.host=mymongodb-mongodb
      - mongodb.port=27017
      - database.name=eiffel
      - collection.name=events       
      
  generate: 
    restart: always
    image: eiffelericsson/eiffel-remrem-generate:${REMREM_GENERATE_VERSION}
    expose:
      - "8080"        
    ports:
      - "8095:8080"            
    networks:
          eiffel_2.0_1:
            aliases:
              - generate:8080
   
  
  publish:  
    restart: always
    image: eiffelericsson/eiffel-remrem-publish:${REMREM_PUBLISH_VERSION}
    expose:
      - "8080"        
    ports:
      - "8096:8080"    
    depends_on:
      myrabbitmq-rabbitmq:
          condition: service_healthy
    environment:
      - RABBITMQ_HOST=myrabbitmq-rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_EXCHANGE=ei-poc-4
      - RABBITMQ_USERNAME=myuser
      - RABBITMQ_PASSWORD=myuser
      - RABBIT_MQ_TLS=
      - REMREM_RABBITMQ_DOMAIN_ID=remrem
      - GENERATE_SERVER_HOST=generate
      - GENERATE_SERVER_PORT=8080
      - GENERATE_SERVER_PATH=
      - AD_ENABLED=false
      - AD_LDAP_URL=
      - AD_MANAGER_PASSWORD=
      - AD_MANAGER_DN=
      - AD_ROOT_DN=
      - AD_USER_SEARCH_FILTER=
      - WAIT_MB_HOSTS=myrabbitmq-rabbitmq:15672
    networks:
          eiffel_2.0_1:
            aliases:
              - publish:8080
       
  eiffel-er:
    restart: always
    image: eiffelericsson/eiffel-er:${EIFFEL_ER_VERSION}
    expose:
      - "8080"        
    ports:
      - "8084:8080"     
    depends_on:  
      - myrabbitmq-rabbitmq
      - mymongodb-mongodb 
      - eiffel-intelligence-artifact      
      - eiffel-intelligence-testexecution
      - eiffel-intelligence-sourcechange
    networks:
          eiffel_2.0_1:
            aliases:
              - eiffel-er:8080 
    environment:   # Overrides settings in config file in catalina folder. OBS --> skip quotes for rabbitmq.bindingKey value  
                   # No config file copied to catalina folder in Dockerfile, only uses env vars below ;-)
                   # /eventrepository removed in contextpath
       - server.contextPath=/    
       - server.port=8080
       - rabbitmq.host=myrabbitmq-rabbitmq
       - rabbitmq.componentName=eventrepository
       - rabbitmq.port=5672
       - rabbitmq.domainId=eiffel-sandbox
       - rabbitmq.durable=true
       - rabbitmq.user=myuser
       - rabbitmq.password=myuser
       - rabbitmq.exchangeName=ei-poc-4
       - rabbitmq.bindingKey=#             
       - rabbitmq.autoDelete=false
       - rabbitmq.createExchangeIfNotExisting=true
       - rabbitmq.consumerName=messageConsumer     
       - mongodb.host=mymongodb-mongodb
       - mongodb.port=27017
       - mongodb.database=eiffel
       - mongodb.collection=events
       - mongodb.user                
       - mongodb.password    
       - mongodb.indexes=meta.id,links.target,links.type,meta.time,data.gav.groupId,data.gav.artifactId       
       - mongodb.externalERs
       - search.limit=100
       - search.levels=10
       - eventrepo2.URL=https://eiffel.lmera.ericsson.se/com.ericsson.duraci/eiffel-erri/index.html
       - index.staticIndex.indexOn=false
       - index.staticIndex.filePath=src/main/resources/static_indexes.json
       - index.dynamicIndex.indexOn=false
       - index.dynamicIndex.indexCreationDay=SUNDAY
       - index.dynamicIndex.indexCreationTime=11:50:00
       - index.dynamicIndex.maxIndexesCount=5
       - index.dynamicIndex.filePath=src/main/resources/dynamic_indexing.json
       - index.dynamicIndex.fileUpdatePeriod=30
     
               
  eiffel-jenkins1:
    restart: always
    image: eiffelericsson/eiffel-jenkins:${EIFFEL_JENKINS_VERSION}
    expose:
      - "8080"        
    ports:
      - "8082:8080"    
      - "50001:50000"          
    depends_on:  
      - myrabbitmq-rabbitmq  
      - mymongodb-mongodb
      - eiffel-er  
      - generate
      - publish      
      - mynexus3
      - eiffel-intelligence-artifact
      - eiffel-intelligence-testexecution
      - eiffel-intelligence-sourcechange
    environment:
#      - JAVA_OPTS="-Djava.util.logging.config.file=/var/jenkins_home/log.properties"
      - NEXUS_DESCRIPTION=mynexus3
      - NEXUS_URL=http://mynexus3:8081/
      - NEXUS_DOWNLOAD_REPO_NAME=/repositories/maven-releases/
      - NEXUS_UPLOAD_REPO_NAME=/repositories/maven-releases/
      - NEXUS_USER=admin
      - NEXUS_PASSWORD=admin123
      - RABBITMQ_HOST=myrabbitmq-rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_EXCHANGE_NAME=ei-poc-4
      - RABBITMQ_COMPONENT_NAME=eiffel-jenkins1
      - RABBITMQ_PROTOCOL=amqp
      - RABBITMQ_CREATE_EXCHANGE=true
      - RABBITMQ_USER=myuser
      - RABBITMQ_PASSWORD=myuser
      - RABBITMQ_DOMAIN_ID=eiffel-sandbox
      - REMREM_GENERATE_URL=http://generate:8080
      - REMREM_PUBLISH_URL=http://publish:8080
      - REMREM_PUBLISH_GEN_PUB_URL=http://publish:8080/generateAndpublish?mp=eiffelsemantics&parseData=false&msgType=
      - REMREM_USER=guest
      - REMREM_PASSWORD=guest
      - ER_REST_URL=http://eiffel-er:8080/
      - BYPASS_IO=false
      - WAIT_MB_HOSTS=myrabbitmq-rabbitmq:15672
      - FEM_VERSION=${EIFFEL_JENKINS_VERSION}
    networks:
          eiffel_2.0_1:
            aliases:
              - eiffel-jenkins1:8080 
              - eiffel-jenkins1:50000
#    volumes:                                   
#      - jenkins_home:/var/jenkins_home       
       
  eiffel-jenkins2:
    restart: always
    image: eiffelericsson/eiffel-jenkins:${EIFFEL_JENKINS_VERSION}
    expose:
      - "8080"        
    ports:
      - "8083:8080"    
      - "50002:50000"          
    depends_on:  
      - myrabbitmq-rabbitmq  
      - mymongodb-mongodb
      - eiffel-er  
      - generate
      - publish      
      - mynexus3
      - eiffel-intelligence-artifact
      - eiffel-intelligence-testexecution
      - eiffel-intelligence-sourcechange
    networks:
          eiffel_2.0_1:
            aliases:
              - eiffel-jenkins2:8080 
              - eiffel-jenkins2:50000
#    volumes:                                   
#      - jenkins_home:/var/jenkins_home   


  mynexus3:      
    restart: always
    image: sonatype/nexus3:${NEXUS_VERSION}
    expose:
      - "8081"        
    ports:
      - "8081:8081"
    depends_on:
      myrabbitmq-rabbitmq:
          condition: service_healthy
    networks:
          eiffel_2.0_1:
            aliases:
              - mynexus3:8081
    
#    volumes:                                   
#      - /opt/my-nexus-data:/nexus-data       


    
networks:
  eiffel_2.0_1:  
